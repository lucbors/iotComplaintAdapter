
package nl.hrlmr.complaint.service._1;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140319.1121
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "ComplaintService-1.0_2", targetNamespace = "http://hrlmr.nl/complaint/service/1.0",
                  wsdlLocation =
                  "http://vdds-nlsoa-01.lux.eproseed.com:7003/soa-infra/services/default/ComplaintService/ComplaintService-1.0?wsdl#%7Bhttp%3A%2F%2Fhrlmr.nl%2Fcomplaint%2Fservice%2F1.0%7DComplaintService-1.0_2")
public class ComplaintService102 extends Service {

    private final static URL COMPLAINTSERVICE102_WSDL_LOCATION;
    private final static WebServiceException COMPLAINTSERVICE102_EXCEPTION;
    private final static QName COMPLAINTSERVICE102_QNAME =
        new QName("http://hrlmr.nl/complaint/service/1.0", "ComplaintService-1.0_2");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url =
                new URL("http://vdds-nlsoa-01.lux.eproseed.com:7003/soa-infra/services/default/ComplaintService/ComplaintService-1.0?wsdl#%7Bhttp%3A%2F%2Fhrlmr.nl%2Fcomplaint%2Fservice%2F1.0%7DComplaintService-1.0_2");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        COMPLAINTSERVICE102_WSDL_LOCATION = url;
        COMPLAINTSERVICE102_EXCEPTION = e;
    }

    public ComplaintService102() {
        super(__getWsdlLocation(), COMPLAINTSERVICE102_QNAME);
    }

    public ComplaintService102(WebServiceFeature... features) {
        super(__getWsdlLocation(), COMPLAINTSERVICE102_QNAME, features);
    }

    public ComplaintService102(URL wsdlLocation) {
        super(wsdlLocation, COMPLAINTSERVICE102_QNAME);
    }

    public ComplaintService102(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, COMPLAINTSERVICE102_QNAME, features);
    }

    public ComplaintService102(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ComplaintService102(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ComplaintServicePortType
     */
    @WebEndpoint(name = "ComplaintServicePort")
    public ComplaintServicePortType getComplaintServicePort() {
        return super.getPort(new QName("http://hrlmr.nl/complaint/service/1.0", "ComplaintServicePort"),
                             ComplaintServicePortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComplaintServicePortType
     */
    @WebEndpoint(name = "ComplaintServicePort")
    public ComplaintServicePortType getComplaintServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://hrlmr.nl/complaint/service/1.0", "ComplaintServicePort"),
                             ComplaintServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (COMPLAINTSERVICE102_EXCEPTION != null) {
            throw COMPLAINTSERVICE102_EXCEPTION;
        }
        return COMPLAINTSERVICE102_WSDL_LOCATION;
    }

}
